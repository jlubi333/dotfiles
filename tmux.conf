# pbcopy/paste fix
set-option -g default-command "reattach-to-user-namespace -l bash"

# Enable 256 colors
set -g default-terminal "screen-256color"

# Set prefix to Control-A
set -g prefix C-a
unbind C-b

# Window Switching
bind-key -n S-Right next-window
bind-key -n S-Left previous-window

# Window Moving
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Vim movement
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Scrolling
set -g mode-mouse on

# Borders
set -g pane-active-border-fg colour13
set -g pane-border-fg colour15

# Clock
set -g clock-mode-style 24
set -g clock-mode-colour colour13

# Status Line
set -g status-utf8 on
set -g status-style "bg=default"
set -g status-justify left
set -g window-status-format "   #W"
set -g window-status-current-format "   #[fg=colour13,bold]#W"
set -g status-left-length 80
set -g status-right-length 80
# Triple Integral
# set -g status-left "#[fg=colour5]âˆ­ "
set -g status-left ""
set -g status-right "#(~/dotfiles/flip_day.sh)     #(eval ~/dotfiles/zelda-battery-tmux.sh 120)     #[fg=colour13]%A, %B %-e     %-l:%M %p"
set -g status-interval 30

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# C-l clear screen functionality
bind C-l send-keys 'C-l'

# New window, same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
